'''
      [ 1•1 + -3•2 +  2•1,  1•4 + -3•1 +  2•-2,  1•1 + -3•1 +  2•1, 1•0 + -3•1 +  2•2]   [-3,-3, 0, 1]
A•B = [ 2•1 +  1•2 + -3•1,  2•4 +  1•1 + -3•-2,  2•1 +  1•1 + -3•1, 2•0 +  1•1 + -3•2] = [ 1,15, 0,-5]
      [ 4•1 + -3•2 + -1•1,  4•4 + -3•1 + -1•-2,  4•1 + -3•1 + -1•1, 4•0 + -3•1 + -1•2]   [-3,15, 0,-5]

      [ 1•2 + -3•3 +  2•2,  1•1 + -3•-2 +  2•-5,  1•-1 + -3•-1 +  2•-1, 1•-2 + -3•-1 +  2•0]   [-3,-3, 0, 1]
A•B = [ 2•2 +  1•3 + -3•2,  2•1 +  1•-2 + -3•-5,  2•-1 +  1•-1 + -3•-1, 2•-2 +  1•-1 + -3•0] = [ 1,15, 0,-5]
      [ 4•2 + -3•3 + -1•2,  4•1 + -3•-2 + -1•-5,  4•-1 + -3•-1 + -1•-1, 4•-2 + -3•-1 + -1•0]   [-3,15, 0,-5]
'''

import numpy as np

A = np.array([
        [1,-3, 2],
        [2, 1,-3],
        [4,-3,-1]])
B = np.array([
        [1, 4, 1, 0],
        [2, 1, 1, 1],
        [1,-2, 1, 2]])
C = np.array([
        [2, 1,-1,-2],
        [3,-2,-1,-1],
        [2,-5,-1, 0]])

AB = np.dot(A,B)
AC = np.dot(A,C)
print(AB)
print(AC)
print((AB==AC).all())