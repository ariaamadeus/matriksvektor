'''
      [ 1•1 +  1•0 + -1•-1,  1•3 +  1•2 + -1•4]   [ 2, 1]
A•B = [ 2•1 +  0•0 +  3•-1,  2•3 +  0•2 +  3•4] = [-1,18]
      [ 3•1 + -1•0 +  2•-1,  3•3 + -1•2 +  2•4]   [ 1,15]

      [ 1•1 + 3•2,  1•2 + 3•0,  1•3 + 3•-2,  1•-4 + 3•1]   [7, 2, -3,-1]
B•C = [ 0•1 + 2•2,  0•2 + 2•0,  0•3 + 2•-2,  0•-4 + 2•1] = [4, 0, -4, 2]
      [-1•1 + 4•2, -1•2 + 4•0, -1•3 + 4•-2, -1•-4 + 4•1]   [7,-2,-11, 8]

          [ 2•1 +  1•2,  2•2 +  1•0,  2•3 +  1•-2,  2•-4 +  1•1]   [ 4,  4,  4, -7]
(A•B)•C = [-1•1 + 18•2, -1•2 + 18•0, -1•3 + 18•-2, -1•-4 + 18•1] = [35, -2,-39, 22]
          [ 1•1 + 15•2,  1•2 + 15•0,  1•3 + 15•-2,  1•-4 + 15•1]   [31,  2,-27, 11]

          [ 1•7 +  1•4 + -1•7,  1• 2 +  1•0 + -1•-2, 1•-3 +  1•-4 + -1•-11,  1•-1 +  1•2 + -1•8]   [ 4,  4,  4, -7]
A•(B•C) = [ 2•7 +  0•4 +  3•7,  2• 2 +  0•0 +  3•-2, 2•-3 +  0•-4 +  3•-11,  2•-1 +  0•2 +  3•8] = [35, -2,-39, 22]
          [ 3•7 + -1•4 +  2•7,  3•-2 + -1•0 +  2•-2, 3•-3 + -1•-4 +  2•-11,  3•-1 + -1•2 +  2•8]   [31,  2,-27, 11]
'''

import numpy as np

A = np.array([
        [1, 1,-1],
        [2, 0, 3],
        [3,-1, 2]])
B = np.array([
        [ 1, 3],
        [ 0, 2],
        [-1, 4]])
C = np.array([
        [1, 2, 3,-4],
        [2, 0,-2, 1],])

ABdC = np.dot(np.dot(A,B),C)
print(np.dot(B,C))
AdBC = np.dot(A,np.dot(B,C))
print(ABdC)
print(AdBC)
print((ABdC==AdBC).all())